/*
 * Laserfiche OAuth 2.0 Authorization Server API
 * An ASP.NET Core web API for Laserfiche OAuth 2.0 Authorization Server<p><strong>Build# : </strong>4f7a879120e1a11fb1d3772c18859787d28d355b_.20220404.1</p>
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.laserfiche.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * GetAccessTokenRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-05-20T17:11:53.639-04:00[America/New_York]")
public class GetAccessTokenRequest {
  @SerializedName("client_id")
  private Object clientId = null;

  @SerializedName("grant_type")
  private String grantType = null;

  @SerializedName("code")
  private Object code = null;

  @SerializedName("redirect_uri")
  private Object redirectUri = null;

  @SerializedName("scope")
  private Object scope = null;

  @SerializedName("refresh_token")
  private Object refreshToken = null;

  @SerializedName("code_verifier")
  private Object codeVerifier = null;

  public GetAccessTokenRequest clientId(Object clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * The Client ID returned when the application was registered.
   * @return clientId
  **/
  @Schema(description = "The Client ID returned when the application was registered.")
  public Object getClientId() {
    return clientId;
  }

  public void setClientId(Object clientId) {
    this.clientId = clientId;
  }

  public GetAccessTokenRequest grantType(String grantType) {
    this.grantType = grantType;
    return this;
  }

   /**
   * The value MUST be either of \&quot;authorization_code\&quot;, \&quot;refresh_token\&quot;, or \&quot;client_credentials\&quot;.
   * @return grantType
  **/
  @Schema(required = true, description = "The value MUST be either of \"authorization_code\", \"refresh_token\", or \"client_credentials\".")
  public String getGrantType() {
    return grantType;
  }

  public void setGrantType(String grantType) {
    this.grantType = grantType;
  }

  public GetAccessTokenRequest code(Object code) {
    this.code = code;
    return this;
  }

   /**
   * The authorization code returned by the authorization server in the first step of the authorization code flow.
   * @return code
  **/
  @Schema(description = "The authorization code returned by the authorization server in the first step of the authorization code flow.")
  public Object getCode() {
    return code;
  }

  public void setCode(Object code) {
    this.code = code;
  }

  public GetAccessTokenRequest redirectUri(Object redirectUri) {
    this.redirectUri = redirectUri;
    return this;
  }

   /**
   * This should be equal to the Redirect URI sent to /authorize endpoint in the first step of the authorization code flow.
   * @return redirectUri
  **/
  @Schema(description = "This should be equal to the Redirect URI sent to /authorize endpoint in the first step of the authorization code flow.")
  public Object getRedirectUri() {
    return redirectUri;
  }

  public void setRedirectUri(Object redirectUri) {
    this.redirectUri = redirectUri;
  }

  public GetAccessTokenRequest scope(Object scope) {
    this.scope = scope;
    return this;
  }

   /**
   * The scope of the requested access token.
   * @return scope
  **/
  @Schema(description = "The scope of the requested access token.")
  public Object getScope() {
    return scope;
  }

  public void setScope(Object scope) {
    this.scope = scope;
  }

  public GetAccessTokenRequest refreshToken(Object refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * The refresh token, which can be used to obtain new access tokens.
   * @return refreshToken
  **/
  @Schema(description = "The refresh token, which can be used to obtain new access tokens.")
  public Object getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(Object refreshToken) {
    this.refreshToken = refreshToken;
  }

  public GetAccessTokenRequest codeVerifier(Object codeVerifier) {
    this.codeVerifier = codeVerifier;
    return this;
  }

   /**
   * A code verifier, used to verify the code_challenge sent to /authorize endpoint in the first step of the authorization code flow.
   * @return codeVerifier
  **/
  @Schema(description = "A code verifier, used to verify the code_challenge sent to /authorize endpoint in the first step of the authorization code flow.")
  public Object getCodeVerifier() {
    return codeVerifier;
  }

  public void setCodeVerifier(Object codeVerifier) {
    this.codeVerifier = codeVerifier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccessTokenRequest getAccessTokenRequest = (GetAccessTokenRequest) o;
    return Objects.equals(this.clientId, getAccessTokenRequest.clientId) &&
        Objects.equals(this.grantType, getAccessTokenRequest.grantType) &&
        Objects.equals(this.code, getAccessTokenRequest.code) &&
        Objects.equals(this.redirectUri, getAccessTokenRequest.redirectUri) &&
        Objects.equals(this.scope, getAccessTokenRequest.scope) &&
        Objects.equals(this.refreshToken, getAccessTokenRequest.refreshToken) &&
        Objects.equals(this.codeVerifier, getAccessTokenRequest.codeVerifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, grantType, code, redirectUri, scope, refreshToken, codeVerifier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccessTokenRequest {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    grantType: ").append(toIndentedString(grantType)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    codeVerifier: ").append(toIndentedString(codeVerifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
